<?xml version="1.0" ?>

<launch>
	<!-- If mode = sim: Simulated AUV with MBES and control in loaded bathymetric map 
	If mode = gt: reproduce Hugin survey and construct map of real bathymetry --> 
    <arg name="mode"                            default="sim"/>
    <arg name="namespace"                       default="hugin_0"/>
    <arg name="debug"                           default="0"/>
    <arg name="dataset"                         default="asko"/>
    <arg name="app"                             default="ipp"/>

    <!-- MBES sensor -->
	<arg name="n_beams_mbes"                    default="64"/>	
	<arg name="mbes_open_angle"                 default="1.57" />
  
    <!-- Coordinates of odom frame wrt the map frame. By default, the AUV start the mission here -->
    <arg name="x"                               default="800"/>
    <arg name="y"                               default="-200"/>
    <arg name="z"                               default="0.0"/>
    <arg name="roll"                            default="0.0"/>
    <arg name="pitch"                           default="0.0"/>
    <arg name="yaw"                             default="-1.57"/>

    <arg name="map_frame"                       default="map"/>
    <arg name="odom_frame"                      default="$(arg namespace)/odom"/>
    <arg name="odometry_topic"                  default="/$(arg mode)/$(arg namespace)/odom"/>
    <arg name="mbes_pings_topic"                default="/$(arg mode)/$(arg namespace)/mbes_pings"/>

    <!-- RBPF params  -->
    <arg name="particle_count"                  default="1"/>
    <arg name="num_particle_handlers"           default="1"/> 
    <arg name="survey_finished_top"             default="/$(arg mode)/survey_finished"/>

    <!-- API for SVGP particles -->
    <arg name="gp_ip_topic"                     default="/$(arg namespace)/gp/inducing_points"/>
    <arg name="gp_mb_server"                    default="/$(arg namespace)/gp/minibatch_server"/>
    <arg name="manipulate_gp_server"            default="/particle_0/$(arg namespace)/gp/manipulate_server"/>
    <arg name="gp_resample_top"                 default="/$(arg namespace)/gp/resample_top"/>
    <arg name="results_path"                    default="/home/alex/catkin_ws/src/UWExploration/planning/ipp/data/"/>   
    <arg name="num_particles_per_handler"       default="1"/>      
    <arg name="svgp_minibatch_size"             default="1024" />

    <!-- Planner parameters -->
    <arg name="planner_type"                    default="opt"/> <!-- lawnmower or opt -->
    <arg name="turning_radius"                  default="20"/>
    <arg name="corner_topic"                    default="/$(arg namespace)/corners"/>
    <arg name="path_topic"                      default="/$(arg namespace)/waypoints"/>
    <arg name="planner_req_topic"               default="/$(arg namespace)/planner_req"/>
    <arg name="swath_width"                     default="40"/>
    <arg name="training_rate"                   default="30"/>
    <arg name="wp_resolution"                   default="20"/>
    <arg name="path_nbr_samples"                default="7" />
    <arg name="voxel_size"                      default="3" />
    <arg name="wp_sample_interval"              default="1" />
    <arg name="beta"                            default="20" />
    <arg name="MCTS_max_depth"                  default="2" />
    <arg name="MCTS_UCT_C"                      default="12.0" />

    <!-- Planner constraints -->
    <arg name="bound_left"                      default="592"/>
    <arg name="bound_right"                     default="821"/>
    <arg name="bound_up"                        default="-179"/>
    <arg name="bound_down"                      default="-457"/>
    <arg name="horizon_distance"                default="100"/>
    <arg name="border_margin"                   default="20"/>
    <arg name="prior_mean"                      default="-18" />
    <arg name="prior_vari"                      default="0.125" />

    <!-- If plotting decision support material should be enabled-->
    <arg name="visualize"                       default="0"/>

    <!-- Run IPP node -->
    <node type="planner_node.py" pkg="ipp" name="AUV_path_planning_node" output="screen"> 
            <param name="gp_ip_topic"               value="/$(arg namespace)/gp/inducing_points"/>
            <param name="inducing_points_top"       value="$(arg gp_ip_topic)"/>   
            <param name="gp_mb_server"              value="/$(arg namespace)/gp/minibatch_server"/>
            <param name="manipulate_gp_server"      value="/particle_0/$(arg namespace)/gp/manipulate_server"/>
            <param name="gp_resample_top"           value="/$(arg namespace)/gp/resample_top"/>
            <param name="gp_resampling_top"         value="/$(arg namespace)/gp/resample_top"/>
            <param name="results_path"              value="/home/alex/catkin_ws/src/UWExploration/planning/ipp/data/"/>
            <param name="sample_gp_server"          value="/$(arg namespace)/gp/sample_server"/>
            <param name="minibatch_gp_server"       value="$(arg gp_mb_server)"/>     
            <param name="svgp_num_ind_points"       value="250"/>     
            <param name="svgp_minibatch_size"       value="$(arg svgp_minibatch_size)"/>     
            <param name="svgp_learning_rate"        value="1e-1"/>     
            <param name="svgp_rtol"                 value="1e-3"/>  
            <param name="svgp_verbose"              value="False"/>    
            <param name="svgp_auto_stop"            value="False"/>     
            <param name="num_particles_per_handler" value="$(arg num_particles_per_handler)"/>     
            <param name="results_path"              value="$(arg results_path)"/> 
            <param name="particle_enable_lc"        value="/$(arg namespace)/enable_lc"/> 
            <param name="planner_type"              value="$(arg planner_type)" />
            <param name="turning_radius"            value="$(arg turning_radius)" />
            <param name="corner_topic"              value="$(arg corner_topic)" />
            <param name="path_topic"                value="$(arg path_topic)" />
            <param name="planner_req_topic"         value="$(arg planner_req_topic)" />
            <param name="odom_topic"                value="$(arg odometry_topic)" />
            <param name="beta"                      value="$(arg beta)" />
            <param name="swath_width"               value="$(arg swath_width)" />
            <param name="prior_mean"                value="$(arg prior_mean)" />
            <param name="prior_vari"                value="$(arg prior_vari)" />
            <param name="bound_left"                value="$(arg bound_left)" />
            <param name="bound_right"               value="$(arg bound_right)" />
            <param name="bound_up"                  value="$(arg bound_up)" />
            <param name="bound_down"                value="$(arg bound_down)" />
            <param name="border_margin"             value="$(arg border_margin)" />
            <param name="horizon_distance"          value="$(arg horizon_distance)" />
            <param name="wp_sample_interval"        value="$(arg wp_sample_interval)" />
            <param name="wp_resolution"             value="$(arg wp_resolution)" />
            <param name="voxel_size"                value="$(arg voxel_size)" />
            <param name="path_nbr_samples"          value="$(arg path_nbr_samples)" />
            <param name="MCTS_max_depth"            value="$(arg MCTS_max_depth)" />
            <param name="MCTS_UCT_C"                value="$(arg MCTS_UCT_C)" />
            <param name="map_frame"                 value="$(arg map_frame)"/>
            <param name="odom_frame"                value="$(arg odom_frame)"/>
            <param name="train_rate"    type="int"  value="$(arg training_rate)" />
            <param name="svgp_n_window" type="int"  value="400"/>     
            <param name="n_beams_mbes"  type="int"  value="$(arg n_beams_mbes)" />  
    </node>

    <!--
    <node type="particles_launcher.py" pkg="rbpf_slam" name="particle_launcher" output="screen">
        <param name="namespace" value="$(arg namespace)"/>  
        <param name="n_beams_mbes" value="$(arg n_beams_mbes)"/>  
        <param name="results_path" value="$(arg results_path)" />
        <param name="svgp_minibatch_size" value="$(arg svgp_minibatch_size)"/>     
        <param name="num_particle_handlers" value="$(arg num_particle_handlers)"/>     
        <param name="num_particles_per_handler" value="$(eval arg('particle_count') / arg('num_particle_handlers'))"/>     
        <param name="particle_launch_file" value="$(find rbpf_slam)/launch/particle.launch"/>     
    </node>
    -->

    <!-- Run uncertainty management node -->
    <node type="auv_ui_online.py" pkg="uncert_management" name="auv_ui_online" output="screen">
        <param name="map_frame"                 value="$(arg map_frame)" />
        <param name="odom_frame"                value="$(arg odom_frame)" />
        <param name="base_link"                 value="$(arg namespace)/base_link" />
        <param name="mbes_link"                 value="$(arg namespace)/mbes_link" />
        <param name="odometry_topic"            value="$(arg odometry_topic)" />
        <param name="mbes_pings_topic"          value="$(arg mbes_pings_topic)" />
        <param name="corner_topic"              value="$(arg corner_topic)" />
        <param name="background_img_path"       value="$(find uw_tests)/datasets/$(arg dataset)/default_real_mean_depth.png" />       
        <param name="dataset"                   value="$(arg dataset)" />       
        <param name="visualization_period"      value="0.5" />       
        <param name="survey_finished_top"       value="$(arg survey_finished_top)" />
        <param name="minibatch_gp_server"       value="$(arg gp_mb_server)"/>    
        <param name="inducing_points_top"       value="$(arg gp_ip_topic)"/>     
        <param name="path_topic"                value="/$(arg namespace)/waypoints" />
        <param name="gp_resampling_top"         value="$(arg gp_resample_top)" />
        <param name="manipulate_gp_server"      value="$(arg manipulate_gp_server)" />
        <param name="synch_topic"               value="/$(arg app)/synch" />
    </node>

    <!-- Run waypoint handler / navigation control -->
    <include file="$(find basic_navigation)/launch/basic_mission.launch" >
        <arg name="manual_control"              default="False"/>
        <arg name="namespace"                   default="$(arg namespace)"/>
    </include>

    <!-- Run simulation environment -->
    <include file="$(find auv_model)/launch/auv_environment.launch" >
        <arg name="mode"                        default="$(arg mode)"/>
        <arg name="namespace"                   default="$(arg namespace)"/>
        <arg name="dataset"                     default="$(arg dataset)"/>
        <arg name="x"                           default="$(arg x)"/>
        <arg name="y"                           default="$(arg y)"/>
        <arg name="z"                           default="$(arg z)"/>
        <arg name="roll"                        default="$(arg roll)"/>
        <arg name="pitch"                       default="$(arg pitch)"/>
        <arg name="yaw"                         default="$(arg yaw)"/>
        <arg name="n_beams_mbes"                default="$(arg n_beams_mbes)" />
        <arg name="mbes_open_angle"             default="$(arg mbes_open_angle)"/>
    </include>

    <!-- datafile-->
    <include file="$(find auv_model)/launch/auv_env_aux.launch" >
        <arg name="dataset"                     default="$(arg dataset)"/>
    </include>

    <!-- If we are visualizing, plot decision material -->
    <group if="$(eval arg('visualize') == 1)">
        <node type="VisualizationClass.py" pkg="ipp" name="Visualization_node" output="screen">
            <param name="bound_left"                value="$(arg bound_left)" />
            <param name="bound_right"               value="$(arg bound_right)" />
            <param name="bound_up"                  value="$(arg bound_up)" />
            <param name="bound_down"                value="$(arg bound_down)" />    
            <param name="beta"                      value="$(arg beta)" />
        </node>
    </group>

</launch>

