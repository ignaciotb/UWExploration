<?xml version="1.0" ?>
<launch>
	<!-- If mode = sim: Simulated AUV with MBES and control in loaded bathymetric map 
	If mode = gt: reproduce Hugin survey and construct map of real bathymetry --> 
    <arg name="mode" default="sim"/>
	<arg name="namespace" default="hugin"/>
	<arg name="dataset" default="overnight_2020"/>
    <arg name="app" default="basic"/>
    <arg name="debug" default="0"/>
    <arg name="multi_agent" default="false"/>

	<!-- Rates for simulating missions  -->
    <arg name="odom_rate" default="0.1"/>
	<arg name="meas_rate" default="0.1"/>
	<!-- Rate for replaying real missions  -->
    <arg name="replay_rate" default="0.3"/>
	
	<!-- MBES sensor -->
	<arg name="n_beams_mbes" default="100"/>	
	<arg name="mbes_open_angle" default="1.0" />

    <!-- Real data  -->
    <arg name="path" default="$(find uw_tests)/datasets/$(arg dataset)/"/>
    <arg name="cereal_trajectory" default="$(arg path)/mbes_pings_33.cereal"/>

	<!-- Coordinates of odom frame wrt the map frame. By default, the AUV start the mission here -->
	<arg name="x" default="-300.0"/>
	<arg name="y" default="-400.0"/>
	<arg name="z" default="0.0"/>
	<arg name="roll" default="0.0"/>
	<arg name="pitch" default="0.0"/>
	<arg name="yaw" default="0.0"/>

	<group ns="$(arg namespace)">

		<!-- Publish map as pcl  -->
		<node type="map_pcl_vis.py" pkg="map_visualizer" name="map_pub" output="screen">
			<param name="map_cloud_path"  value="$(find uw_tests)/datasets/$(arg dataset)/pcl.npy" />
			<!-- <param name="map_gp_path"  value="$(find uw_tests)/datasets/$(arg dataset)/post_gptorch.npy"/> -->
			<param name="map_gp_path"  value=""/>
			<param name="map_sift_path"  value=""/>
			<!-- <param name="map_sift_path"  value="$(find uw_tests)/$(arg app)/$(arg dataset)/sift_map.pcd"/> -->
			<param name="map_frame" value="map" />
			<param name="map_mbes" value="/map_mbes" />
			<param name="use_pings_cloud" type= "bool" value="True" />
		</node>

		<!-- Extract SIFT features from map  -->
		<!-- <node type="sift_extractor_node" pkg="map_features" name="sift_extractor_node" output="screen">
			<param name="map_cloud_path"  value="$(find uw_tests)/datasets/$(arg dataset)/pcl_33_over.npy" />
			<param name="map_frame" value="map" />
			<param name="map_mbes" value="/map_mbes" />
		</node> -->

		<!-- Reproduce real Hugin survey -->
  		<group unless="$(eval mode == 'sim')">
			<!-- Hugin model -->
			<param name="robot_description" command="$(find xacro)/xacro '$(find hugin_description)/robots/hugin_auv_default.urdf.xacro' debug:=$(arg debug) namespace:=$(arg namespace)" />
			<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
			</node>

			<node pkg="auv_2_ros" type="auv_2_ros" name="auv_2_ros" output="screen">
				<param name="trajectory_cereal" value="$(arg cereal_trajectory)"/>
				<param name="mbes_pings_topic" value="/$(arg mode)/$(arg namespace)/mbes_pings" />
				<param name="odom_topic" value="/$(arg mode)/$(arg namespace)/odom" />
				<param name="replay_rate" value="$(arg replay_rate)" />
				<param name="mbes_pings" value="/$(arg mode)/mbes_pings" />
				<param name="debug_pings" value="debug/mbes_pings" />
				<param name="world_frame" value="world" />
				<param name="map_frame" value="map" />
				<param name="odom_frame" value="$(arg namespace)/odom" />
				<param name="base_link" value="$(arg namespace)/base_link" />
				<param name="mbes_link" value="$(arg namespace)/mbes_link" />
				<!-- <param name="add_mini" value="$(arg add_mini)" /> -->
				<param name="synch_topic" value="/$(arg app)/synch" />
				<param name="n_beams_mbes" value="$(arg n_beams_mbes)" />
      			<param name="survey_finished_top" value="/gt/survey_finished" />       
				<param name="start_mission_ping_num" value="0" />
				<!-- <param name="end_mission_ping_num" value="28000" /> -->
			</node>
		    
			<group if="$(eval app == 'basic')">
				<node pkg="auv_model" type="auv_multi.py" name="fake_synch_srv" output="screen">
					<param name="synch_topic" value="/$(arg app)/synch" />
				</node>
			</group>
			
		</group>

	</group>

	<!-- Simulate Hugin AUV -->
	<group if="$(eval mode == 'sim')">
		<node pkg="tf" type="static_transform_publisher" name="tf_world_map_pub" 
				args="0 0 0 0 0 0 world map 50" />
			
		<include file="$(find auv_model)/launch/auv_model.launch" >
			<arg name="mode" value="$(arg mode)"/>
			<arg name="namespace" value="$(arg namespace)"/>
			<arg name="dataset" value="$(arg dataset)"/>
			<arg name="app" value="$(arg app)"/>
			<arg name="debug" value="$(arg debug)"/>
			<arg name="odom_rate" value="$(arg odom_rate)"/>
			<arg name="meas_rate" value="$(arg meas_rate)"/>
			<arg name="n_beams_mbes" value="$(arg n_beams_mbes)"/>	
			<arg name="mbes_open_angle" value="$(arg mbes_open_angle)" />
			<arg name="path" value="$(arg path)" />
			<arg name="x" value="$(arg x)"/>
			<arg name="y" value="$(arg y)"/>
			<arg name="z" value="$(arg z)"/>
			<arg name="roll" value="$(arg roll)"/>
			<arg name="pitch" value="$(arg pitch)"/>
			<arg name="yaw" value="$(arg yaw)"/>
			<arg name="multi_agent" value="$(arg multi_agent)"/>
		</include>
	</group>

</launch>
